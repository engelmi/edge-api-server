/* SPDX-License-Identifier: LGPL-2.1-or-later */

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/engelmi/edge-api-server/pkg/apis/edge/v1alpha1"
)

// EdgeDeviceSpecApplyConfiguration represents an declarative configuration of the EdgeDeviceSpec type for use
// with apply.
type EdgeDeviceSpecApplyConfiguration struct {
	ID    *string             `json:"id,omitempty"`
	Type  *string             `json:"type,omitempty"`
	Nodes *v1alpha1.EdgeNodes `json:"nodes,omitempty"`
}

// EdgeDeviceSpecApplyConfiguration constructs an declarative configuration of the EdgeDeviceSpec type for use with
// apply.
func EdgeDeviceSpec() *EdgeDeviceSpecApplyConfiguration {
	return &EdgeDeviceSpecApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *EdgeDeviceSpecApplyConfiguration) WithID(value string) *EdgeDeviceSpecApplyConfiguration {
	b.ID = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *EdgeDeviceSpecApplyConfiguration) WithType(value string) *EdgeDeviceSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithNodes sets the Nodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Nodes field is set to the value of the last call.
func (b *EdgeDeviceSpecApplyConfiguration) WithNodes(value v1alpha1.EdgeNodes) *EdgeDeviceSpecApplyConfiguration {
	b.Nodes = &value
	return b
}
