/* SPDX-License-Identifier: LGPL-2.1-or-later */

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// WorkloadApplyConfiguration represents an declarative configuration of the Workload type for use
// with apply.
type WorkloadApplyConfiguration struct {
	Name     *string `json:"name,omitempty"`
	State    *string `json:"state,omitempty"`
	SubState *string `json:"substate,omitempty"`
}

// WorkloadApplyConfiguration constructs an declarative configuration of the Workload type for use with
// apply.
func Workload() *WorkloadApplyConfiguration {
	return &WorkloadApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *WorkloadApplyConfiguration) WithName(value string) *WorkloadApplyConfiguration {
	b.Name = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *WorkloadApplyConfiguration) WithState(value string) *WorkloadApplyConfiguration {
	b.State = &value
	return b
}

// WithSubState sets the SubState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SubState field is set to the value of the last call.
func (b *WorkloadApplyConfiguration) WithSubState(value string) *WorkloadApplyConfiguration {
	b.SubState = &value
	return b
}
